//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:2.0.50727.42
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LameSoft.SniffThat {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class SniffThat {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        internal SniffThat() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("LameSoft.SniffThat.SniffThat", typeof(SniffThat).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Author ähnelt.
        /// </summary>
        internal static string Author {
            get {
                return ResourceManager.GetString("Author", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Play ähnelt.
        /// </summary>
        internal static string bPlay {
            get {
                return ResourceManager.GetString("bPlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stop ähnelt.
        /// </summary>
        internal static string bStop {
            get {
                return ResourceManager.GetString("bStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only Not Protected Access Points ähnelt.
        /// </summary>
        internal static string cbOnlyNotProtected {
            get {
                return ResourceManager.GetString("cbOnlyNotProtected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only currently visible Access Points ähnelt.
        /// </summary>
        internal static string cbOnlyVisible {
            get {
                return ResourceManager.GetString("cbOnlyVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error while exporting ähnelt.
        /// </summary>
        internal static string ExportError {
            get {
                return ResourceManager.GetString("ExportError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export Message ähnelt.
        /// </summary>
        internal static string ExportMessage {
            get {
                return ResourceManager.GetString("ExportMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error closing Gps ähnelt.
        /// </summary>
        internal static string GpsCloseError {
            get {
                return ResourceManager.GetString("GpsCloseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Gps Info Database Version ähnelt.
        /// </summary>
        internal static string GpsInfoDBVersion {
            get {
                return ResourceManager.GetString("GpsInfoDBVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error enabling Gps ähnelt.
        /// </summary>
        internal static string GpsOpenError {
            get {
                return ResourceManager.GetString("GpsOpenError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Gps State ähnelt.
        /// </summary>
        internal static string GpsState {
            get {
                return ResourceManager.GetString("GpsState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die GPS stopped ähnelt.
        /// </summary>
        internal static string GpsStopped {
            get {
                return ResourceManager.GetString("GpsStopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Illegal or invalid Database file specified ähnelt.
        /// </summary>
        internal static string IllegalDBFile {
            get {
                return ResourceManager.GetString("IllegalDBFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initializing Plugins ähnelt.
        /// </summary>
        internal static string InitPlugins {
            get {
                return ResourceManager.GetString("InitPlugins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export to... ähnelt.
        /// </summary>
        internal static string lExportTo {
            get {
                return ResourceManager.GetString("lExportTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Filter ähnelt.
        /// </summary>
        internal static string lFilter {
            get {
                return ResourceManager.GetString("lFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Gps Baud ähnelt.
        /// </summary>
        internal static string lGpsBaud {
            get {
                return ResourceManager.GetString("lGpsBaud", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Gps Com Port ähnelt.
        /// </summary>
        internal static string lGpsComPort {
            get {
                return ResourceManager.GetString("lGpsComPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Gps Info File ähnelt.
        /// </summary>
        internal static string lGpsInfoFile {
            get {
                return ResourceManager.GetString("lGpsInfoFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error while loading the List ähnelt.
        /// </summary>
        internal static string ListLoadError {
            get {
                return ResourceManager.GetString("ListLoadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error loading the List ähnelt.
        /// </summary>
        internal static string ListLoadErrorHead {
            get {
                return ResourceManager.GetString("ListLoadErrorHead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error while saving the List ähnelt.
        /// </summary>
        internal static string ListSaveError {
            get {
                return ResourceManager.GetString("ListSaveError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error saving the List ähnelt.
        /// </summary>
        internal static string ListSaveErrorHead {
            get {
                return ResourceManager.GetString("ListSaveErrorHead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Max. Gps Info Radius ähnelt.
        /// </summary>
        internal static string lMaxGpsRadius {
            get {
                return ResourceManager.GetString("lMaxGpsRadius", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Loading Settings ähnelt.
        /// </summary>
        internal static string LoadSettings {
            get {
                return ResourceManager.GetString("LoadSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scan Interval (ms) ähnelt.
        /// </summary>
        internal static string lScanInterval {
            get {
                return ResourceManager.GetString("lScanInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wireless Adapter ähnelt.
        /// </summary>
        internal static string lWLanAdapter {
            get {
                return ResourceManager.GetString("lWLanAdapter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AccessPoints ähnelt.
        /// </summary>
        internal static string miAccessPoints {
            get {
                return ResourceManager.GetString("miAccessPoints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cancel ähnelt.
        /// </summary>
        internal static string miCancelExport {
            get {
                return ResourceManager.GetString("miCancelExport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cancel ähnelt.
        /// </summary>
        internal static string miCancelSettings {
            get {
                return ResourceManager.GetString("miCancelSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clear ähnelt.
        /// </summary>
        internal static string miClear {
            get {
                return ResourceManager.GetString("miClear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exit ähnelt.
        /// </summary>
        internal static string miExit {
            get {
                return ResourceManager.GetString("miExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export ähnelt.
        /// </summary>
        internal static string miExport {
            get {
                return ResourceManager.GetString("miExport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Gps ähnelt.
        /// </summary>
        internal static string miGps {
            get {
                return ResourceManager.GetString("miGps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Load ähnelt.
        /// </summary>
        internal static string miLoad {
            get {
                return ResourceManager.GetString("miLoad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Menu ähnelt.
        /// </summary>
        internal static string miMenu {
            get {
                return ResourceManager.GetString("miMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Merge ähnelt.
        /// </summary>
        internal static string miMerge {
            get {
                return ResourceManager.GetString("miMerge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Refresh Gps Info ähnelt.
        /// </summary>
        internal static string miRefreshGpsInfo {
            get {
                return ResourceManager.GetString("miRefreshGpsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save ähnelt.
        /// </summary>
        internal static string miSave {
            get {
                return ResourceManager.GetString("miSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save ähnelt.
        /// </summary>
        internal static string miSaveSettings {
            get {
                return ResourceManager.GetString("miSaveSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scan ähnelt.
        /// </summary>
        internal static string miScan {
            get {
                return ResourceManager.GetString("miScan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Settings ähnelt.
        /// </summary>
        internal static string miSettings {
            get {
                return ResourceManager.GetString("miSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export ähnelt.
        /// </summary>
        internal static string miStartExport {
            get {
                return ResourceManager.GetString("miStartExport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Visuals ähnelt.
        /// </summary>
        internal static string miVisuals {
            get {
                return ResourceManager.GetString("miVisuals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error adding Module ähnelt.
        /// </summary>
        internal static string ModuleAddError {
            get {
                return ResourceManager.GetString("ModuleAddError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export Plugins ähnelt.
        /// </summary>
        internal static string NodeExport {
            get {
                return ResourceManager.GetString("NodeExport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Visual Plugins ähnelt.
        /// </summary>
        internal static string NodeVisual {
            get {
                return ResourceManager.GetString("NodeVisual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No active Export Modules found ähnelt.
        /// </summary>
        internal static string NoExportModules {
            get {
                return ResourceManager.GetString("NoExportModules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Play Open WLan Sound ähnelt.
        /// </summary>
        internal static string OpenWLanSound {
            get {
                return ResourceManager.GetString("OpenWLanSound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Searching Plugins ähnelt.
        /// </summary>
        internal static string SearchPlugins {
            get {
                return ResourceManager.GetString("SearchPlugins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sound File: ähnelt.
        /// </summary>
        internal static string SoundFile {
            get {
                return ResourceManager.GetString("SoundFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starting Application ähnelt.
        /// </summary>
        internal static string StartApplication {
            get {
                return ResourceManager.GetString("StartApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die About ähnelt.
        /// </summary>
        internal static string tpAbout {
            get {
                return ResourceManager.GetString("tpAbout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Gps ähnelt.
        /// </summary>
        internal static string tpGps {
            get {
                return ResourceManager.GetString("tpGps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Modules ähnelt.
        /// </summary>
        internal static string tpModules {
            get {
                return ResourceManager.GetString("tpModules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wireless ähnelt.
        /// </summary>
        internal static string tpWireless {
            get {
                return ResourceManager.GetString("tpWireless", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error while visualizing ähnelt.
        /// </summary>
        internal static string VisualError {
            get {
                return ResourceManager.GetString("VisualError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Visual Message ähnelt.
        /// </summary>
        internal static string VisualMessage {
            get {
                return ResourceManager.GetString("VisualMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wireless Lan Adapter not found!
        ///Check the Settings or try reactivating your Wireless Lan Adapter ähnelt.
        /// </summary>
        internal static string WirelessAdapterNotFoundError {
            get {
                return ResourceManager.GetString("WirelessAdapterNotFoundError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error while scanning Wireless Lan ähnelt.
        /// </summary>
        internal static string WirelessAdapterNotFoundErrorHead {
            get {
                return ResourceManager.GetString("WirelessAdapterNotFoundErrorHead", resourceCulture);
            }
        }
    }
}
